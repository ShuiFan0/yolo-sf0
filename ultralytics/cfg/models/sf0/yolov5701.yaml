# Ultralytics YOLO ðŸš€, AGPL-3.0 license
# YOLOv8 object detection model with P3-P5 outputs. For Usage examples see https://docs.ultralytics.com/tasks/detect

# Parameters
nc: 80 # number of classes
scales: # model compound scaling constants, i.e. 'model=yolov8n.yaml' will call yolov8.yaml with scale 'n'
  # [depth, width, max_channels]
  n: [0.33, 0.25, 1024] # YOLOv8n summary: 225 layers,  3157200 parameters,  3157184 gradients,   8.9 GFLOPs
  s: [0.33, 0.50, 1024] # YOLOv8s summary: 225 layers, 11166560 parameters, 11166544 gradients,  28.8 GFLOPs
  m: [0.67, 0.75, 768] # YOLOv8m summary: 295 layers, 25902640 parameters, 25902624 gradients,  79.3 GFLOPs
  l: [1.00, 1.00, 512] # YOLOv8l summary: 365 layers, 43691520 parameters, 43691504 gradients, 165.7 GFLOPs
  x: [1.00, 1.25, 512] # YOLOv8x summary: 365 layers, 68229648 parameters, 68229632 gradients, 258.5 GFLOPs

# YOLOv8.0n backbone
backbone:
  # [from, repeats, module, args]
  - [-1, 1, Silence, []] # 0
  - [-1, 1, nn.Upsample, [None, 0.5, "bilinear"]] # 1
  - [-1, 1, nn.Upsample, [None, 0.5, "bilinear"]] # 2
  - [-1, 1, nn.Upsample, [None, 0.5, "bilinear"]] # 3
  - [-1, 1, nn.Upsample, [None, 0.5, "bilinear"]] # 4
  - [-1, 1, nn.Upsample, [None, 0.5, "bilinear"]] # 5
  
  - [1, 1, Conv, [64, 3, 2]] # 6-z1-0
  - [2, 1, Conv, [64, 3, 1]] # 7-z1-0
  - [[-1, -2], 1, Concat, [1]] # 8
  - [-1, 3, C2fSD, [64, True]] # 9

  - [2, 1, Conv, [64, 3, 2]] # 10-z2-0
  - [3, 1, Conv, [64, 3, 1]] # 11-z2-0
  - [[-1, -2], 1, Concat, [1]] # 12
  - [-1, 3, C2fSD, [64, True]] # 13

  - [3, 1, Conv, [64, 3, 2]] # 14-z3-0
  - [4, 1, Conv, [64, 3, 1]] # 15-z3-0
  - [[-1, -2], 1, Concat, [1]] # 16
  - [-1, 3, C2fSD, [64, True]] # 17

  - [4, 1, Conv, [64, 3, 2]] # 18-z4-0
  - [5, 1, Conv, [64, 3, 1]] # 19-z4-1
  - [[-1, -2], 1, Concat, [1]] # 20
  - [-1, 3, C2fSD, [64, True]] # 21
  - [-1, 1, PSASD, [64, 1]] # 22



  - [0, 1, Conv, [64, 3, 2]] # 23-P1/2
  - [1, 1, Conv, [64, 3, 1]] # 24-P1/2
  - [[-1, -2], 1, Concat, [1]] # 25
  - [-1, 1, ConvS, [64, 1, 1]] # 26-P1/2
  - [-1, 1, Conv, [128, 3, 2]] # 27-P2/4
  - [[-1, 9], 1, Concat, [1]] # 28
  - [-1, 3, C2fSD, [128, True]] # 29
  - [[-1, 9], 1, Concat, [1]] # 30
  - [-1, 1, Conv, [256, 3, 2]] # 31-P3/8
  - [[-1, 13], 1, Concat, [1]] # 32
  - [-1, 6, C2fSD, [256, True]] # 33

  - [[-1, 13], 1, Concat, [1]] # 34
  - [-1, 1, SCDown, [512, 3, 2]] # 35-P4/16
  - [[-1, 17], 1, Concat, [1]] # 36
  - [-1, 6, C2fSD, [512, True]] # 37

  - [[-1, 17], 1, Concat, [1]] # 38
  - [-1, 1, SCDown, [1024, 3, 2]] # 39-P5/32
  - [[-1, 21, 22], 1, Concat, [1]] # 40
  - [-1, 3, C2fSCIB, [1024, True, True]] # 41
  - [[-1, 21, 22], 1, Concat, [1]] # 42
  - [-1, 1, SPPFS, [1024, 5]] # 43
  - [[-1, 21, 22], 1, Concat, [1]] # 44
  - [-1, 1, PSAS, [1024]] # 45
  

  - [-1, 1, SCDown, [512, 3, 2]] # 46
  - [-1, 1, PSAS, [512]] #47
  - [-1, 1, SCDown, [512, 3, 2]] # 48
  - [-1, 1, ToConvWeight, [384, 6]] #49

  - [-1, 1, SplitConv2dResult, [0, 128]] #50
  - [-2, 1, SplitConv2dResult, [128, 192]] #51
  - [-3, 1, SplitConv2dResult, [320, 64]] #52


# YOLOv8.0n head
head:
  - [[13, 50], 1, DynamicThroughConvS, [128, 1, 0.1]] ##53
  - [-1, 1, SplitConv2dResult, [0, 64]] ##54
  - [-2, 1, SplitConv2dResult, [64,64]] ##55
  
  - [[17, 51], 1, DynamicThroughConvS, [192, 1, 0.1]] # 56
  - [-1, 1, SplitConv2dResult, [0,  64]] ##57
  - [-2, 1, SplitConv2dResult, [64, 64]] ##58
  - [-3, 1, SplitConv2dResult, [128,64]] ##59

  - [[21, 52], 1, DynamicThroughConvS, [64, 1, 0.1]] ##60

  
  - [45, 1, nn.Upsample, [None, 2, "nearest"]] # 61
  - [[-1, 37, 17, 57], 1, Concat, [1]] # 62
  - [-1, 3, C2fSD, [512]] # 63

  - [-1, 1, nn.Upsample, [None, 2, "nearest"]] ##64
  - [[-1, 33, 13, 54], 1, Concat, [1]] # 65
  - [-1, 3, C2fSD, [256]] # 66 (P3/8-small)
  
  - [[-1, 13, 55], 1, Concat, [1]] # 67-cat backbone P3
  - [-1, 1, Conv, [256, 3, 2]] # 68
  - [[-1, 63, 17, 58], 1, Concat, [1]] # 69
  - [-1, 3, C2fSD, [512]] # 70 (P4/16-medium)
  
  - [[-1, 17, 59], 1, Concat, [1]] # 71-cat backbone P3
  - [-1, 1, SCDown, [512, 3, 2]] # 72
  - [[-1, 45, 21, 22, 60], 1, Concat, [1]] # 73
  - [-1, 3, C2fCIB, [1024, True, True]] # 74 (P5/32-large)

  - [[66, 70, 74], 1, Detect, [nc]] # Detect(P3, P4, P5)